@using System.Globalization
@using Musikanalyse.Services.Contracts
@model Musikanalyse.Services.Contracts.Page

@{
    ViewBag.Title = "Edit";
    IList<Category> availableCategories = (IList<Category>)ViewBag.AvailableCategories;
    List<SelectListItem> categoryItems = new List<SelectListItem> { new SelectListItem { Text = "(Keine)", Value = string.Empty } };
    categoryItems.AddRange(availableCategories.Select(x => new SelectListItem { Text = x.Name, Value = x.Id.ToString(CultureInfo.InvariantCulture) }));
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Content</legend>

        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.CreationDate)
        @Html.HiddenFor(model => model.LastModifiedDate)

        <p>
            <input type="submit" value="Save" />
        </p>

        <hr/>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Value)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Value, new { style = "width: 100%; height: 25em;", @class = "MarkdownEditor" })
            @Html.ValidationMessageFor(model => model.Value)
        </div>
        
        @if (Model.GetType() == typeof(ContentPage))
        {
            <div class="editor-label">
                @Html.Label("Url")
            </div>
            <div class="editor-field">
                @Html.Editor("Url")
                @Html.ValidationMessage("Url")
            </div>
        }
        else if (Model.GetType() == typeof(TutorialPage))
        {
            <div class="editor-label">
                @Html.Label("UrlKey")
            </div>
            <div class="editor-field">
                @Html.Editor("UrlKey")
                @Html.ValidationMessage("UrlKey")
            </div>

            <div class="editor-label">
                @Html.Label("Category")
            </div>
            <div class="editor-field">
                @Html.DropDownList("CategoryId", categoryItems)
                @Html.ValidationMessage("CategoryId")
            </div>

            <div class="editor-label">
                @Html.Label("ThumbnailUrl")
            </div>
            <div class="editor-field">
                @Html.Editor("ThumbnailUrl")
                @Html.ValidationMessage("ThumbnailUrl")
            </div>

            <div class="editor-label">
                @Html.Label("Abstract")
            </div>
            <div class="editor-field">
                @Html.TextArea("Abstract", new { style = "width: 100%; height: 25em;", @class = "MarkdownEditor" })
                @Html.ValidationMessage("Abstract")
            </div>
        }
        else
        {
            throw new InvalidOperationException();
        }

    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
