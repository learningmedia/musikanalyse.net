%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 54 740 285 778
%%Creator: Sibelius for Windows version 4.1.1 on Windows XP
%%CreationDate: Sat May 20 04:00:12 2006
%%Title: Modell - diatonisch.eps
%%DocumentFonts:
%%+ Amadeus
%%+ AmadeusSpecial
%%DocumentNeededFonts:
%%+ Amadeus
%%+ AmadeusSpecial
%%EndComments
%%BeginProlog
/ScaledChar { % string angle xscale yscale xpos ypos fontsize fontname
	gsave
		findfont
		exch
		scalefont
		setfont
		moveto
		scale
		rotate
		show
	grestore
} bind def
/TextBegin { % string angle xpos ypos fontsize fontname
	findfont
	exch
	scalefont
	setfont
	moveto
	gsave
		rotate
		show
} bind def
/TextEnd {grestore} bind def
/Line { % xto yto xfrom yfrom width dasharray
	gsave
		0 setdash
		setlinewidth
		newpath
		moveto
		lineto
		stroke
	grestore
} bind def 
/Poly { % array-of-points xfrom yfrom 
	newpath
	moveto
	{
		dup
		0 get
		exch
		1 get
		lineto
	}
	forall
	closepath
} bind def 
/PolyFilled { % array-of-points xfrom yfrom
	Poly
	fill
} bind def
/PolyStroke { % array-of-points xfrom yfrom linewidth 
	setlinewidth
	Poly
	stroke
} bind def
/Bezier { % <Xm1 Ym1 Xm2 Ym2 Xm3 Ym3>m = (num-curves-1)...0 num-curves x0 y0 
	newpath
	moveto
	{curveto} repeat
} bind def
/BezierFilled {
	Bezier
	closepath
	fill
} bind def
/BezierStroke { % <Xm1 Ym1 Xm2 Ym2 Xm3 Ym3>m=num-cuves...0 num-curves x0 y0 width
	setlinewidth
	Bezier
	stroke
} bind def
/Circle { % x y r 
	newpath
	0 360 arc
} bind def
/CircleStroke { % x y r w
	setlinewidth
	Circle
	stroke
} bind def
/CircleFilled { % x y r
	Circle
	fill
} bind def
/Clip { % x3 y3 x2 y2 x1 y1 x0 y0 
	gsave
	newpath
	moveto
	lineto
	lineto
	lineto
	closepath
	clip
	newpath
} bind def
/SetupSibeliusEncoding { % font-name
	findfont
	dup
	length
	dict
	begin
		{
			1 index /FID ne
			{ def }
			{pop pop}
			ifelse
		} forall
		/Encoding SibeliusLatinEncoding def
		currentdict
	end
} bind def
/FontExists { % font-name, leaves true or false in stack
	lang_level 2 ge
	{
		/Font resourcestatus
		{pop pop false}
		{true}
		ifelse
	}
	{
		true
	}
	ifelse
} bind def
/SkipBitmapIfWrongLangLevel {
	lang_level 2 lt
	{
		/line_string 1024 string def
		{currentfile line_string readline pop (%_SkippedBitmapToThisPoint) eq {exit} if} loop
	} if
} bind def
/ShowBitmap { % parameters: src_width src_height dst_width dst_height left bottom
	5 index 3 mul /row_string exch string def % 3 times width for each row
	gsave
	translate % x y translate
	neg scale % dst_width -dst_height scale
	8 [3 index 0 0 5 index neg 0 0] % src_width src_height 8 [src_width 0 0 -src_height 0 0]
	{currentfile row_string readhexstring pop} false 3
	colorimage
} bind def
/SibeliusLatinEncoding [
/.notdef
/.notdef
/Euro
/Scaron
/guilsinglleft
/Zcaron
/scaron
/guilsinglright
/zcaron
/brokenbar
/overscore
/twosuperior
/threesuperior
/onesuperior
/onequarter
/onehalf
/threequarters
/Eth
/multiply
/Yacute
/Thorn
/eth
/yacute
/thorn
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/space
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quotesingle
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/grave
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/.notdef
/Adieresis			% Mac 128
/Aring				% Mac 129
/Ccedilla			% Mac 130
/Eacute				% Mac 131
/Ntilde				% Mac 132  
/Odieresis			% Mac 133  
/Udieresis			% Mac 134  
/aacute				% Mac 135  
/agrave				% Mac 136  
/acircumflex		% Mac 137  
/adieresis			% Mac 138  
/atilde				% Mac 139  
/aring				% Mac 140  
/ccedilla			% Mac 141  
/eacute				% Mac 142  
/egrave				% Mac 143  
/ecircumflex		% Mac 144  
/edieresis			% Mac 145  
/iacute				% Mac 146  
/igrave				% Mac 147  
/icircumflex		% Mac 148  
/idieresis			% Mac 149  
/ntilde				% Mac 150  
/oacute				% Mac 151  
/ograve				% Mac 152  
/ocircumflex		% Mac 153  
/odieresis			% Mac 154  
/otilde				% Mac 155  
/uacute				% Mac 156  
/ugrave				% Mac 157  
/ucircumflex		% Mac 158  
/udieresis			% Mac 159  
/dagger				% Mac 160  
/degree				% Mac 161  
/cent				% Mac 162  
/sterling			% Mac 163  
/section			% Mac 164  
/bullet				% Mac 165  
/paragraph			% Mac 166  
/germandbls			% Mac 167  
/registered			% Mac 168  
/copyright			% Mac 169  
/trademark			% Mac 170  
/acute				% Mac 171  
/dieresis			% Mac 172  
/notequal			% Mac 173  
/AE					% Mac 174  
/Oslash				% Mac 175  
/infinity			% Mac 176  
/plusminus			% Mac 177  
/lessequal			% Mac 178  
/greaterequal		% Mac 179  
/yen				% Mac 180  
/mu					% Mac 181  
/partialdiff		% Mac 182  
/summation			% Mac 183  
/product			% Mac 184  
/pi					% Mac 185  
/integral			% Mac 186  
/ordfeminine		% Mac 187  
/ordmasculine		% Mac 188  
/Omega				% Mac 189  
/ae					% Mac 190  
/oslash				% Mac 191  
/questiondown		% Mac 192  
/exclamdown			% Mac 193  
/logicalnot			% Mac 194  
/radical			% Mac 195  
/florin				% Mac 196  
/approxequal		% Mac 197  
/Delta				% Mac 198  
/guillemotleft		% Mac 199  
/guillemotright		% Mac 200  
/ellipsis			% Mac 201  
/space				% non-breaking space	Mac 202  
/Agrave				% Mac 203  
/Atilde				% Mac 204  
/Otilde				% Mac 205  
/OE					% Mac 206  
/oe					% Mac 207  
/endash				% Mac 208  
/emdash				% Mac 209  
/quotedblleft		% Mac 210  
/quotedblright		% Mac 211  
/quoteleft			% Mac 212  
/quoteright			% Mac 213  
/divide				% Mac 214  
/lozenge			% Mac 215  
/ydieresis			% Mac 216  
/Ydieresis			% Mac 217  
/fraction			% Mac 218  
/currency			% Mac 219  
/guilsinglleft		% Mac 220  
/guilsinglright		% Mac 221  
/fi					% Mac 222  
/fl					% Mac 223  
/daggerdbl			% Mac 224  
/periodcentered		% Mac 225  
/quotesinglbase		% Mac 226  
/quotedblbase		% Mac 227  
/perthousand		% Mac 228  
/Acircumflex		% Mac 229  
/Ecircumflex		% Mac 230  
/Aacute				% Mac 231  
/Edieresis			% Mac 232  
/Egrave				% Mac 233  
/Iacute				% Mac 234  
/Icircumflex		% Mac 235  
/Idieresis			% Mac 236  
/Igrave				% Mac 237  
/Oacute				% Mac 238  
/Ocircumflex		% Mac 239  
/apple				% Mac 240  
/Ograve				% Mac 241  
/Uacute				% Mac 242  
/Ucircumflex		% Mac 243  
/Ugrave				% Mac 244  
/dotlessi			% Mac 245  
/circumflex			% Mac 246  
/tilde				% Mac 247  
/macron				% Mac 248  
/breve				% Mac 249  
/dotaccent			% Mac 250  
/ring				% Mac 251  
/cedilla			% Mac 252  
/hungarumlaut		% Mac 253  
/ogonek				% Mac 254  
/caron				% Mac 255
] bind def
%%EndProlog
%%BeginSetup
/UniGlyphName (      ) def
/ReadingMSB true def
/MSBCharCode 0 def
/languagelevel where
	{
		pop
		/lang_level languagelevel def
	}
	{
		/lang_level 1 def
	}
	ifelse
%%EndSetup
0.138398 0.138377 scale
0 0 translate
2029 5550 2029 5422 5 [] Line
2046 5550 2046 5422 5 [] Line
410 5422 2048 5422 4 [] Line
410 5454 2048 5454 4 [] Line
410 5486 2048 5486 4 [] Line
410 5518 2048 5518 4 [] Line
410 5550 2048 5550 4 [] Line
(&) 0 1 1 434 5454 128 /Amadeus ScaledChar
(w) 0 1 1 656 5566 128 /Amadeus ScaledChar
(w) 0 1 1 656 5502 128 /Amadeus ScaledChar
832 5582 916 5582 5 [] Line
(w) 0 1 1 847 5582 128 /Amadeus ScaledChar
(w) 0 1 1 847 5502 128 /Amadeus ScaledChar
% pushing bezier parameters on the stack
	740 5476 815 5476 841 5502
	1 716 5502 2 BezierStroke
% pushing bezier parameters on the stack
	815 5471 740 5471 716 5502
	740 5481 815 5481 841 5502
	2 716 5502 BezierFilled
1028 5582 1112 5582 5 [] Line
(w) 0 1 1 1043 5582 128 /Amadeus ScaledChar
(w) 0 1 1 1043 5486 128 /Amadeus ScaledChar
% pushing bezier parameters on the stack
	933 5616 1010 5616 1037 5590
	1 907 5590 2 BezierStroke
% pushing bezier parameters on the stack
	1010 5611 933 5611 907 5590
	933 5621 1010 5621 1037 5590
	2 907 5590 BezierFilled
(w) 0 1 1 1234 5566 128 /Amadeus ScaledChar
(w) 0 1 1 1234 5486 128 /Amadeus ScaledChar
% pushing bezier parameters on the stack
	1127 5452 1202 5452 1228 5478
	1 1103 5478 2 BezierStroke
% pushing bezier parameters on the stack
	1202 5447 1127 5447 1103 5478
	1127 5457 1202 5457 1228 5478
	2 1103 5478 BezierFilled
(w) 0 1 1 1418 5566 128 /Amadeus ScaledChar
(w) 0 1 1 1418 5470 128 /Amadeus ScaledChar
% pushing bezier parameters on the stack
	1317 5591 1388 5591 1412 5566
	1 1294 5566 2 BezierStroke
% pushing bezier parameters on the stack
	1388 5586 1317 5586 1294 5566
	1317 5596 1388 5596 1412 5566
	2 1294 5566 BezierFilled
(<) 0 1 1 1552 5550 128 /AmadeusSpecial ScaledChar
(#) 0 1 1 1573 5550 128 /Amadeus ScaledChar
(>) 0 1 1 1606 5550 128 /AmadeusSpecial ScaledChar
(w) 0 1 1 1636 5550 128 /Amadeus ScaledChar
(w) 0 1 1 1636 5470 128 /Amadeus ScaledChar
% pushing bezier parameters on the stack
	1508 5442 1599 5442 1630 5470
	1 1478 5470 2 BezierStroke
% pushing bezier parameters on the stack
	1599 5437 1508 5437 1478 5470
	1508 5447 1599 5447 1630 5470
	2 1478 5470 BezierFilled
(w) 0 1 1 1821 5454 128 /Amadeus ScaledChar
(w) 0 1 1 1821 5566 128 /Amadeus ScaledChar
%%EOF
